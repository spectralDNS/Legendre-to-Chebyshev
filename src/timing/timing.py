import subprocess
import re
import numpy as np
import matplotlib.pyplot as plt

s = 64
repeat = 10000
number = "([0-9]+.[0-9]+e[+-][0-9]+)"
integer = "([0-9]+)"
ini = "Initialization "+number
f = "Timing N +" + integer + " avg / min = " + number + " / " + number + " flops = " + integer
time = []

#for n in range(0, 8):
#    N = s * 2**(n+2)
#    ss = 32 if n == 0 else 64
#    print(n, N, ss)
#    h = subprocess.check_output(f"l2c -N{N} -d0 -t1 -s{ss} -r{repeat} -v2", shell=True)
#    g = re.search(f, h.decode())
#    t = g.groups()
#    g1 = re.search(ini, h.decode())
#    time.append([int(t[0]), float(t[1]), float(t[3]), float(g1.groups()[0])])
#
#time = np.array(time)

DC = np.array([
  [512, 0.000057],
  [2048, 0.00065],
  [8192, 0.0057],
  [32768, 0.035],
  [131072, 0.19],
  [524288, 0.89],
  [2097152, 4.02],
  [8388608, 19.03]
])

#TH = np.array([
#    [256, 0.000024, 0.000027],
#    [512, 0.000067, 0.000071],
#    [1024, 0.000227, 0.000189],
#    [2*1024, 0.000734, 0.001060],
#    [4*1024, 0.002371, 0.002079],
#    [8*1024, 0.005824, 0.005787],
#    [16*1024, 0.014384, 0.014432],
#    [32*1024, 0.033771, 0.033709],
#    [64*1024, 0.076597, 0.080024],
#    [128*1024, 0.175661, 0.176808]])

TH = np.array([
  [64, 1.024*1e-6],
  [128, 4.481*1e-6],
  [256, 16.268*1e-6],
  [512, 56.046*1e-6],
  [1024, 169.033*1e-6],
  [2048, 534.797*1e-6],
  [4096, 2.075*1e-3],
  [8192, 5.952*1e-3],
  [16384, 14.335*1e-3],
  [32768, 33.440*1e-3],
  [65536, 77.296*1e-3],
  [131072, 174.724*1e-3],
])
TH = np.array([
   [128, 170.950*1e-6],
  [256, 235.189*1e-6],
  [512, 397.153*1e-6],
  [1024, 1.013*1e-3],
  [2048, 5.567*1e-3],
  [4096, 8.132*1e-3],
  [8192, 21.947*1e-3],
  [16384, 73.502*1e-3],
  [32768, 240.303*1e-3],
  [65536, 406.329*1e-3],
  [131072, 1.275],
  [262144, 2.319],
  [524288, 4.411],
  [1048576, 9.323]])

TH_saga = np.array([
  [256, 0.000041],
  [512, 0.000161],
  [1024, 0.000559],
  [2048, 0.001605],
  [4*1024, 0.004514],
  [8*1024, 0.011905],
  [16*1024, 0.031541],
  [32*1024, 0.072413],
  [64*1024, 0.165085],
  [128*1024, 0.367546]])


time = np.array(
    [[256, 4.0000e-06, 0, 0],
     [512, 1.1000e-05, 0, 0],
     [1024, 2.4000e-05, 0, 0],
     [2048, 5.2000e-05, 0, 0],
     [4096, 1.0900e-04, 0, 0],
     [8192, 2.2300e-04, 0, 0],
     [16384, 4.5700e-04, 0, 0],
     [32768, 9.2700e-04, 0, 0],
     [65536, 1.8160e-03, 0, 0],
     [131072, 3.8420e-03, 0, 0],
     [262144, 8.3180e-03, 0, 0],
     [524288, 1.8868e-02, 0, 0],
     [1048576, 4.0105e-02, 0, 0],
     [2097152, 8.2810e-02, 0, 0],
     [4194304, 1.6660e-01, 0, 0],
     [8388608, 3.2341e-01, 0, 0]])

timeL = np.array([
  [256, 4.8840e-06],
[512, 1.1143e-05],
[1024, 2.5498e-05],
[2048, 5.3953e-05],
[4096, 1.1491e-04],
[8192, 2.3631e-04],
[16384, 4.8106e-04],
[32768, 9.7390e-04],
[65536, 1.9720e-03],
[131072, 4.0325e-03],
[262144, 1.0352e-02],
[524288, 2.1283e-02],
[1048576, 4.4488e-02],
[2097152, 8.9368e-02],
[4194304, 1.7551e-01],
[8388608, 3.4758e-01]
])

planL = np.array([
  [256, 4.8469e-05],
[512, 5.3700e-05],
[1024, 9.2401e-05],
[2048, 1.5399e-04],
[4096, 2.6315e-04],
[8192, 4.4009e-04],
[16384, 8.1689e-04],
[32768, 1.8672e-03],
[65536, 3.2152e-03],
[131072, 6.5405e-03],
[262144, 1.3098e-02],
[524288, 2.6387e-02],
[1048576, 5.0650e-02],
[2097152, 8.9207e-02],
[4194304, 1.7610e-01],
[8388608, 3.6604e-01]
])

plan = np.array([
  [256, 8.8664e-05],
[512, 8.0588e-05],
[1024, 1.3957e-04],
[2048, 2.5414e-04],
[4096, 6.0879e-04],
[8192, 8.3374e-04],
[16384, 1.6779e-03],
[32768, 3.3304e-03],
[65536, 6.3487e-03],
[131072, 1.1869e-02],
[262144, 2.9079e-02],
[524288, 4.6323e-02],
[1048576, 8.1072e-02],
[2097152, 1.5624e-01],
[4194304, 3.1548e-01],
[8388608, 6.2983e-01]])

#time = np.array([
#    [256, 5.7200e-06],
#[512, 1.1080e-05],
#[1024, 2.3697e-05],
#[2048, 5.4774e-05],
#[4096, 1.1171e-04],
#[8192, 2.1865e-04],
#[16384, 4.4683e-04],
#[32768, 8.9571e-04],
#[65536, 1.7423e-03],
#[131072, 3.6471e-03],
#[262144, 8.1227e-03],
#[524288, 1.9398e-02],
#[1048576, 3.9424e-02],
#[2097152, 8.3802e-02],
#[4194304, 1.6398e-01],
#[8388608, 3.2829e-01],
#])

time_saga = np.array([
    [256, 8.0000e-06],
    [512, 2.6000e-05],
    [1024, 5.8000e-05],
    [2048, 1.2800e-04],
    [4096, 2.7000e-04],
    [8192, 5.6600e-04],
    [16384, 1.2000e-03],
    [32768, 2.3280e-03],
    [65536, 4.7090e-03],
    [131072, 9.2400e-03],
    [262144, 1.9577e-02],
    [524288, 3.9335e-02],
    [1048576, 8.0556e-02],
    [2097152, 1.6357e-01],
    [4194304, 3.2827e-01],
    [8388608, 6.7243e-01],
])

dct = np.array([
    [256, 1.167000e-06],
    [512, 2.067000e-06],
    [1024, 4.120000e-06],
    [2048, 8.452000e-06],
    [4096, 1.798300e-05],
    [8192, 4.244600e-05],
    [16384, 1.043920e-04],
    [32768, 2.029750e-04],
    [65536, 4.585910e-04],
    [131072, 1.080215e-03],
    [262144, 2.330883e-03],
    [524288, 5.372801e-03],
    [1048576, 1.197100e-02],
    [2097152, 2.937000e-02],
    [4194304, 6.572400e-02],
    [8388608, 1.421990e-01]
])

direct_osx = np.array([
[64, 3.3400e-07],
[128, 8.6800e-07],
[256, 2.8340e-06],
[512, 9.4450e-06],
[1024, 4.6577e-05],
[2048, 1.8406e-04],
[4096, 8.3756e-04],
[8192, 3.5631e-03],
[16384, 1.7601e-02]])

NN = np.array(2**np.arange(4, 25))

plt.loglog(
           time[:, 0], time[:, 1], 'b',
           timeL[:, 0], timeL[:, 1], 'b:',
           #time[:, 0], time2[:, 1], 'r',
           TH[:, 0], TH[:, 1], 'r',
           planL[:, 0], planL[:, 1], 'r:',
           #TH[:, 0], TH[:, 2], 'm',
           DC[:, 0], DC[:, 1], 'ko',
           plan[:, 0], plan[:, 1], 'k:',
           dct[:, 0], dct[:, 1], 'g',
           direct_osx[:-2, 0], direct_osx[:-2, 1], 'k',
           time[:, 0], time[:, 0]*time[3, 1]/time[3, 0], 'k--',
           DC[:, 0], np.log(DC[:, 0])**2*DC[:, 0]*1e-8, 'k--',
           NN[3:14], 5e-11*NN[3:14]**2, 'k--',
           )
plt.xlabel('N')
plt.ylabel('Execution time [s]')
plt.legend(['FMM-OSX', 'FMM-Intel', 'TDC-OSX', 'TH-Intel', 'TDC-[9]', 'Plan FMM', 'DCT-OSX', 'direct-OSX'])
##plt.legend(['FMM-OSX', 'TH-OSX', 'TH-[Table 4.3]', 'Plan FMM', 'DCT-OSX'])
plt.text(10**4, 0.00015, '$\mathcal{O}(N)$', rotation=25)
plt.text(10**6, 1, '$\mathcal{O}(N(\log N)^2)$', rotation=25)
##plt.text(1.2*10**5, 1, '$\mathcal{O}(N^2)$', rotation=45)
plt.savefig('speedleg2cheb.png')
plt.show()
