import subprocess
import re
import numpy as np
import matplotlib.pyplot as plt

s = 64
repeat = 10000
number = "([0-9]+.[0-9]+e[+-][0-9]+)"
integer = "([0-9]+)"
ini = "Initialization "+number
f = "Timing N +" + integer + " avg / min = " + number + " / " + number + " flops = " + integer
time = []

#for n in range(0, 8):
#    N = s * 2**(n+2)
#    ss = 32 if n == 0 else 64
#    print(n, N, ss)
#    h = subprocess.check_output(f"l2c -N{N} -d0 -t1 -s{ss} -r{repeat} -v2", shell=True)
#    g = re.search(f, h.decode())
#    t = g.groups()
#    g1 = re.search(ini, h.decode())
#    time.append([int(t[0]), float(t[1]), float(t[3]), float(g1.groups()[0])])
#
#time = np.array(time)

DC = np.array([
  [512, 0.000057],
  [2048, 0.00065],
  [8192, 0.0057],
  [32768, 0.035],
  [131072, 0.19],
  [524288, 0.89],
  [2097152, 4.02],
  [8388608, 19.03]
])

DCP = np.array([
  [512, 0.00073],
  [2048, 0.0068],
  [8192, 0.059],
  [32768, 0.48],
  [131072, 3.04],
  [524288, 18.13],
  [2097152, 94.52],
  [8388608, 507.21]
])


#TH = np.array([
#    [256, 0.000024, 0.000027],
#    [512, 0.000067, 0.000071],
#    [1024, 0.000227, 0.000189],
#    [2*1024, 0.000734, 0.001060],
#    [4*1024, 0.002371, 0.002079],
#    [8*1024, 0.005824, 0.005787],
#    [16*1024, 0.014384, 0.014432],
#    [32*1024, 0.033771, 0.033709],
#    [64*1024, 0.076597, 0.080024],
#    [128*1024, 0.175661, 0.176808]])

TH = np.array([
  [64, 1.024*1e-6],
  [128, 4.481*1e-6],
  [256, 16.268*1e-6],
  [512, 56.046*1e-6],
  [1024, 169.033*1e-6],
  [2048, 534.797*1e-6],
  [4096, 2.075*1e-3],
  [8192, 5.952*1e-3],
  [16384, 14.335*1e-3],
  [32768, 33.440*1e-3],
  [65536, 77.296*1e-3],
  [131072, 174.724*1e-3],
])
TH = np.array([
   [128, 170.950*1e-6],
  [256, 235.189*1e-6],
  [512, 397.153*1e-6],
  [1024, 1.013*1e-3],
  [2048, 5.567*1e-3],
  [4096, 8.132*1e-3],
  [8192, 21.947*1e-3],
  [16384, 73.502*1e-3],
  [32768, 240.303*1e-3],
  [65536, 406.329*1e-3],
  [131072, 1.275],
  [262144, 2.319],
  [524288, 4.411],
  [1048576, 9.323]])

TH_saga = np.array([
  [256, 0.000041],
  [512, 0.000161],
  [1024, 0.000559],
  [2048, 0.001605],
  [4*1024, 0.004514],
  [8*1024, 0.011905],
  [16*1024, 0.031541],
  [32*1024, 0.072413],
  [64*1024, 0.165085],
  [128*1024, 0.367546]])

#time = np.array([
#    [256, 4.2800e-06],
#[512, 1.0277e-05],
#[1024, 2.2182e-05],
#[2048, 4.7497e-05],
#[4096, 9.8416e-05],
#[8192, 1.9917e-04],
#[16384, 4.0367e-04],
#[32768, 7.9845e-04],
#[65536, 1.6775e-03],
#[131072, 3.4259e-03],
#[262144, 7.9877e-03],
#[524288, 1.8333e-02],
#[1048576, 3.7989e-02],
#[2097152, 7.6461e-02],
#[4194304, 1.5156e-01],
#[8388608, 3.0209e-01]
#     ])
time = np.array(
  [[256, 3.1660e-06],
[512, 7.6250e-06],
[1024, 1.6708e-05],
[2048, 3.4916e-05],
[4096, 7.0167e-05],
[8192, 1.4017e-04],
[16384, 2.8288e-04],
[32768, 5.6742e-04],
[65536, 1.1646e-03],
[131072, 2.2937e-03],
[262144, 4.7816e-03],
[524288, 9.5570e-03],
[1048576, 1.9517e-02],
[2097152, 3.9359e-02],
[4194304, 7.9244e-02],
[8388608, 1.5920e-01]]
)

#timeL = np.array([
#  [256, 4.2980e-06],
#[512, 1.0207e-05],
#[1024, 2.2481e-05],
#[2048, 4.8386e-05],
#[4096, 1.0637e-04],
#[8192, 2.1823e-04],
#[16384, 4.3325e-04],
#[32768, 8.9360e-04],
#[65536, 1.8357e-03],
#[131072, 3.7688e-03],
#[262144, 9.7476e-03],
#[524288, 2.0548e-02],
#[1048576, 4.2495e-02],
#[2097152, 8.4020e-02],
#[4194304, 1.6836e-01],
#[8388608, 3.3421e-01]
#])

timeL = np.array(
  [[256, 3.2090e-06],
[512, 8.5420e-06],
[1024, 1.9584e-05],
[2048, 4.3041e-05],
[4096, 9.2791e-05],
[8192, 1.8958e-04],
[16384, 3.7546e-04],
[32768, 7.5929e-04],
[65536, 1.5891e-03],
[131072, 3.0786e-03],
[262144, 6.4785e-03],
[524288, 1.3063e-02],
[1048576, 2.6510e-02],
[2097152, 5.3314e-02],
[4194304, 1.0683e-01],
[8388608, 2.1461e-01]]
)

#plan=np.array([
#  [256, 1.4603e-05],
#[512, 1.6061e-05],
#[1024, 4.3896e-05],
#[2048, 1.0044e-04],
#[4096, 2.1691e-04],
#[8192, 4.5434e-04],
#[16384, 9.3993e-04],
#[32768, 1.9186e-03],
#[65536, 3.8761e-03],
#[131072, 7.8617e-03],
#[262144, 1.5694e-02],
#[524288, 3.1450e-02],
#[1048576, 6.2978e-02],
#[2097152, 1.2661e-01],
#[4194304, 2.5603e-01],
#[8388608, 5.1682e-01]
#])
plan = np.array(
  [[256, 6.3750e-06],
[512, 1.7958e-05],
[1024, 4.6541e-05],
[2048, 8.9417e-05],
[4096, 1.8808e-04],
[8192, 3.8521e-04],
[16384, 7.8033e-04],
[32768, 1.5894e-03],
[65536, 3.2520e-03],
[131072, 6.4778e-03],
[262144, 1.3605e-02],
[524288, 2.6181e-02],
[1048576, 5.2917e-02],
[2097152, 1.0543e-01],
[4194304, 2.2330e-01],
[8388608, 4.4757e-01]]
)

#planL=np.array([
#  [256, 1.4434e-05],
#[512, 1.9646e-05],
#[1024, 3.6546e-05],
#[2048, 7.1612e-05],
#[4096, 1.5586e-04],
#[8192, 3.2238e-04],
#[16384, 6.5215e-04],
#[32768, 1.3130e-03],
#[65536, 2.6784e-03],
#[131072, 5.3837e-03],
#[262144, 1.0726e-02],
#[524288, 2.1575e-02],
#[1048576, 4.6425e-02],
#[2097152, 9.0936e-02],
#[4194304, 1.8103e-01],
#[8388608, 3.7191e-01]
#])
planL = np.array(
  [[256, 5.0410e-06],
[512, 1.5667e-05],
[1024, 3.4708e-05],
[2048, 5.9666e-05],
[4096, 1.1967e-04],
[8192, 2.4221e-04],
[16384, 4.8750e-04],
[32768, 9.9142e-04],
[65536, 2.0125e-03],
[131072, 4.0373e-03],
[262144, 8.1833e-03],
[524288, 1.6254e-02],
[1048576, 3.3936e-02],
[2097152, 6.5074e-02],
[4194304, 1.3220e-01],
[8388608, 2.6176e-01]
]
)

#time = np.array([
#    [256, 5.7200e-06],
#[512, 1.1080e-05],
#[1024, 2.3697e-05],
#[2048, 5.4774e-05],
#[4096, 1.1171e-04],
#[8192, 2.1865e-04],
#[16384, 4.4683e-04],
#[32768, 8.9571e-04],
#[65536, 1.7423e-03],
#[131072, 3.6471e-03],
#[262144, 8.1227e-03],
#[524288, 1.9398e-02],
#[1048576, 3.9424e-02],
#[2097152, 8.3802e-02],
#[4194304, 1.6398e-01],
#[8388608, 3.2829e-01],
#])

time_saga = np.array([
    [256, 6.0000e-06],
[512, 2.0000e-05],
[1024, 4.1000e-05],
[2048, 8.5000e-05],
[4096, 1.6600e-04],
[8192, 3.3300e-04],
[16384, 7.0400e-04],
[32768, 1.4060e-03],
[65536, 2.8360e-03],
[131072, 5.6930e-03],
[262144, 1.1404e-02],
[524288, 2.3209e-02],
[1048576, 4.6943e-02],
[2097152, 9.4297e-02],
[4194304, 1.8823e-01],
[8388608, 3.7965e-01]
])

#dct = np.array([
#    [256, 1.167000e-06],
#    [512, 2.067000e-06],
#    [1024, 4.120000e-06],
#    [2048, 8.452000e-06],
#    [4096, 1.798300e-05],
#    [8192, 4.244600e-05],
#    [16384, 1.043920e-04],
#    [32768, 2.029750e-04],
#    [65536, 4.585910e-04],
#    [131072, 1.080215e-03],
#    [262144, 2.330883e-03],
#    [524288, 5.372801e-03],
#    [1048576, 1.197100e-02],
#    [2097152, 2.937000e-02],
#    [4194304, 6.572400e-02],
#    [8388608, 1.421990e-01]
#])

dct = np.array(
  [[256, 3.750000e-07],
[512, 7.080000e-07],
[1024, 1.500000e-06],
[2048, 3.208000e-06],
[4096, 7.458000e-06],
[8192, 1.808300e-05],
[16384, 4.175000e-05],
[32768, 1.055420e-04],
[65536, 2.209170e-04],
[131072, 4.607910e-04],
[262144, 1.066375e-03],
[524288, 2.624000e-03],
[1048576, 6.263459e-03],
[2097152, 1.187904e-02],
[4194304, 2.722250e-02],
[8388608, 6.122371e-02]]
)

#direct_osx = np.array([
#[64, 3.5500e-07],
#[128, 8.9300e-07],
#[256, 2.6800e-06],
#[512, 9.2570e-06],
#[1024, 3.7270e-05],
#[2048, 1.7575e-04],
#[4096, 8.1485e-04],
#[8192, 3.4555e-03],
#[16384, 1.6932e-02]
#])
direct_osx = np.array([
[64, 2.9100e-07],
[128, 9.1600e-07],
[256, 2.9160e-06],
[512, 9.7500e-06],
[1024, 3.6750e-05],
[2048, 1.4979e-04],
[4096, 5.8996e-04],
[8192, 2.9732e-03],
[16384, 1.4975e-02]
])

NN = np.array(2**np.arange(4, 25))

#fig, (ax1, ax2) = plt.subplots(1, 2, sharey=True, figsize=(12, 4), sharex=True)
fig = plt.figure(figsize=(6, 4))
ax1 = fig.gca()
ax1.loglog(time[:, 0], timeL[:, 1], 'k', linestyle=(0, (1, 10)), label='FMM (n)')
ax1.loglog(timeL[:, 0], time[:, 1], 'k', label='FMM (m)')
           #time[:, 0], time2[:, 1], 'r',
           #TH[:, 0], TH[:, 1], 'r',
           #TH[:, 0], TH[:, 2], 'm',
ax1.loglog(time[:, 0], time_saga[:, 1], 'k-.', label='FMM (m) SAGA')
ax1.loglog(DC[:, 0], DC[:, 1], 'ko', label='TDC [13]')
           #plan[:, 0], plan[:, 1], 'k:',
           #planL[:, 0], planL[:, 1], 'k-.',
ax1.loglog(dct[:, 0], dct[:, 1], 'gray', label='DCT')
ax1.loglog(direct_osx[:-2, 0], direct_osx[:-2, 1], 'gray', linestyle='dotted', label='Direct')
ax1.loglog(time[:, 0], 0.7*time[:, 0]*time[3, 1]/time[3, 0], 'k--',
           DC[:, 0], np.log(DC[:, 0])**2*DC[:, 0]*1e-8, 'k--',
           NN[3:14], 5e-11*NN[3:14]**2, 'k--')

ax1.set_xlabel('N')
#ax1.set_title('Execution time')
ax1.set_ylabel('Time [s]')
ax1.legend()
#ax1.text(30, 1e-8, '(a)')
ax1.text(10**3, 0.000005, '$\\mathcal{O}(N)$', rotation=25)
ax1.text(10**6, 0.7, '$\\mathcal{O}(N(\\log N)^2)$', rotation=25)
ax1.text(1.2*10**5, 1, '$\\mathcal{O}(N^2)$', rotation=45)
ax1.set_yticks(np.logspace(-6, 6, 7))
#plt.subplot(122)
axes = ax1.axis()
ax1.set_ylim(5e-7, 1000)
plt.savefig('speedleg2cheba.png')

fig2 = plt.figure(figsize=(6, 4))
ax2 = fig2.gca()
ax2.loglog(
           plan[:, 0], plan[:, 1], 'k:',
           planL[:, 0], planL[:, 1], 'k-.',
           DCP[:, 0], DCP[:, 1], 'ko',
           time[:, 0], 0.7*time[:, 0]*time[3, 1]/time[3, 0], 'k--',
           DCP[:, 0], np.log(DC[:, 0])**2*DC[:, 0]*1e-8, 'k--',
           )
ax2.set_xlabel('N')
#ax2.set_title('Planning time')
ax2.legend(['FMM (m)', 'FMM (n)', 'TDC [13]'], loc='upper left')
ax2.text(10**3, 0.000005, '$\\mathcal{O}(N)$', rotation=25)
ax2.text(10**6, 0.7, '$\\mathcal{O}(N(\\log N)^2)$', rotation=25)
ax2.set_xlim(axes[:2])
ax2.set_yticks(np.logspace(-6, 6, 7))
ax2.set_ylim(5e-7, 1000)
#ax2.set_ylim(axes[2:])
#ax2.text(30, 1e-8, '(b)')
#fig.tight_layout()
##plt.legend(['FMM-OSX', 'TH-OSX', 'TH-[Table 4.3]', 'Plan FMM', 'DCT-OSX'])
plt.savefig('speedleg2chebb.png')
plt.show()
